(self.webpackChunkarch_guide=self.webpackChunkarch_guide||[]).push([[953],{5152:(e,n,s)=>{"use strict";s.r(n),s.d(n,{data:()=>a});const a={key:"v-0967d6e1",path:"/rookie/optional-cfg.html",title:"可选配置",lang:"zh-CN",frontmatter:{title:"可选配置"},excerpt:"",headers:[{level:2,title:"字体设置",slug:"字体设置",children:[]},{level:2,title:"休眠（hibernate）设置（可选）",slug:"休眠-hibernate-设置-可选",children:[]}],filePathRelative:"rookie/optional-cfg.md",git:{updatedTime:1623401543e3,contributors:[{name:"icekylin",email:"wminid@yeah.net",commits:2}]}}},5998:(e,n,s)=>{"use strict";s.r(n),s.d(n,{default:()=>u});var a=s(6252);const c=(0,a.Wm)("h1",{id:"其它可选配置"},[(0,a.Wm)("a",{class:"header-anchor",href:"#其它可选配置"},"#"),(0,a.Uk)(" 其它可选配置")],-1),i=(0,a.Wm)("h2",{id:"字体设置"},[(0,a.Wm)("a",{class:"header-anchor",href:"#字体设置"},"#"),(0,a.Uk)(" 字体设置")],-1),l=(0,a.Wm)("p",null,[(0,a.Uk)("笔者的设置是英文使用 Hack，中文使用 Noto Sans CJK SC。可以在 "),(0,a.Wm)("code",null,"系统设置"),(0,a.Uk)(" > "),(0,a.Wm)("code",null,"字体"),(0,a.Uk)(" 中进行设置。")],-1),o=(0,a.Uk)("有关用户全局级别更改日文异型字的设置，可参考 "),r={href:"https://wiki.archlinux.org/index.php/Localization_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)/Simplified_Chinese_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E4%BF%AE%E6%AD%A3%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%E6%98%BE%E7%A4%BA%E4%B8%BA%E5%BC%82%E4%BD%93%EF%BC%88%E6%97%A5%E6%96%87%EF%BC%89%E5%AD%97%E5%BD%A2",target:"_blank",rel:"noopener noreferrer"},p=(0,a.Uk)("archWiki 相关说明"),d=(0,a.Uk)("。"),t=(0,a.uE)('<h2 id="休眠-hibernate-设置-可选"><a class="header-anchor" href="#休眠-hibernate-设置-可选">#</a> 休眠（hibernate）设置（可选）</h2><p>KDE 自身提供开箱即用的睡眠功能（sleep），即将系统挂起到内存，消耗少量的电量。休眠（hibernate）则会将系统挂起到交换分区或交换文件，几乎不消耗电量。如果睡眠功能已可满足你的需求，不需要休眠到硬盘的功能，则可略过此步。</p><p>挂起到硬盘的映像大小一般最大为物理内存的 2/5,其值在 <code>/sys/power/image_size</code> 中确定，故如果想使用休眠功能，Swap 大小一般设置为物理内存的 60% 即可。</p><p>首先确认 swap 文件所在分区的 UUID 以及 swap 文件的偏移值</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> findmnt -no UUID -T /swapfile <span class="token comment"># 确认 UUID</span>\n<span class="token function">sudo</span> filefrag -v /swapfile <span class="token comment"># 确认物理偏移值。第一行数据中的 physical_offset 一列的值即为所需要的数据</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>随后将这两个参数加入内核启动参数中</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vim</span> /etc/default/grub\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>找到 <code>GRUB_CMDLINE_LINUX_DEFAULT</code> 一行，在其值后添加类似如下两项数据，内容根据你自身的 UUID 以及偏移值确定。参数以空格分隔。</p><div class="language-conf ext-conf line-numbers-mode"><pre class="language-conf"><code>resume=UUID=9a940a0a-fa72-4973-9ccc-3eb93ad73b37 resume_offset=6418432\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>配置完成后需要更新 grub 配置：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">grub-mkconfig</span> -o /boot/grub/grub.cfg\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>除此之外，还需配置 initranfs 的 resume 钩子：</p><p>添加 resume 钩子，编辑 <code>/etc/mkinitcpio.conf</code> ，在 HOOKS 行添加 <code>resume</code> 值，注意，<code>resume</code> 需要加入在 udev 后。若使用了 LVM 分区，<code>resume</code> 需要加入在 lvm2 后。</p><p>使用 Intel CPU 并且为触摸板加载 <code>intel_lpss_pci</code> 模块的笔记本电脑，可能会在唤醒时发生内核崩溃（Caps Lock 灯闪烁），黑屏并无法成功唤醒。此时需要编辑 <code>/etc/mkinitcpio.conf</code>，在 MODULES 行添加 <code>intel_lpss_pci</code> 值</p><div class="language-conf ext-conf line-numbers-mode"><pre class="language-conf"><code>MODULES=(intel_lpss_pci)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>最后重新生成 initramfs 镜像：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> mkinitcpio -P\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',17),u={render:function(e,n){const s=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.j4)(a.HY,null,[c,i,l,(0,a.Wm)("p",null,[o,(0,a.Wm)("a",r,[p,(0,a.Wm)(s)]),d]),t],64)}}}}]);