(self.webpackChunkarch_guide=self.webpackChunkarch_guide||[]).push([[599],{4181:(e,n,s)=>{"use strict";s.r(n),s.d(n,{data:()=>a});const a={key:"v-2c18def6",path:"/rookie/basic-install-detail.html",title:"基础安装详解",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"🔭 知其然，知其所以然",slug:"🔭-知其然-知其所以然",children:[]},{level:3,title:"🔖 这一节将会讨论：",slug:"🔖-这一节将会讨论",children:[]},{level:2,title:"💾 分区和格式化",slug:"💾-分区和格式化",children:[{level:3,title:"💾 关于 Btrfs 文件系统",slug:"💾-关于-btrfs-文件系统",children:[]},{level:3,title:"💾 传统 ext4 文件系统说明",slug:"💾-传统-ext4-文件系统说明",children:[]},{level:3,title:"🆕 全新安装",slug:"🆕-全新安装",children:[]},{level:3,title:"💾 Swap 分区和 Swap 文件",slug:"💾-swap-分区和-swap-文件",children:[]}]},{level:2,title:"💽 安装环境和新系统的关系",slug:"💽-安装环境和新系统的关系",children:[{level:3,title:"1. 🏠 建房子",slug:"_1-🏠-建房子",children:[]},{level:3,title:"2. 🛣️ 建立通道",slug:"_2-🛣️-建立通道",children:[]},{level:3,title:"3. 🛋️ 添置家具",slug:"_3-🛋️-添置家具",children:[]},{level:3,title:"4. 🚚 搬进新家",slug:"_4-🚚-搬进新家",children:[]}]},{level:2,title:"🥙 杂七杂八",slug:"🥙-杂七杂八",children:[]}],filePathRelative:"rookie/basic-install-detail.md",git:{updatedTime:162282543e4,contributors:[{name:"icekylin",email:"wminid@yeah.net",commits:4}]}}},7542:(e,n,s)=>{"use strict";s.r(n),s.d(n,{default:()=>De});var a=s(6252);const l=(0,a.Wm)("h1",{id:"基础安装详解"},[(0,a.Wm)("a",{class:"header-anchor",href:"#基础安装详解"},"#"),(0,a.Uk)(" 基础安装详解")],-1),o=(0,a.Wm)("h3",{id:"🔭-知其然-知其所以然"},[(0,a.Wm)("a",{class:"header-anchor",href:"#🔭-知其然-知其所以然"},"#"),(0,a.Uk)(" 🔭 知其然，知其所以然")],-1),c=(0,a.Uk)("这一节对上一节 "),t=(0,a.Uk)("archlinux 基础安装"),m=(0,a.Uk)(" 中关键的几步做出了更进一步的解释，知其然知其所以然。此节没有特定顺序，可根据需要选择性阅读"),i=(0,a.Wm)("p",null,[(0,a.Uk)("需要说明的是，本指南假定你有一定的 Linux 基础知识，基础知识相关的话题"),(0,a.Wm)("strong",null,"不会"),(0,a.Uk)("被讨论")],-1),r=(0,a.uE)('<blockquote><h3 id="🔖-这一节将会讨论"><a class="header-anchor" href="#🔖-这一节将会讨论">#</a> 🔖 这一节将会讨论：</h3><ol><li>安装基础的 archlinux 系统步骤详解</li></ol></blockquote><h2 id="💾-分区和格式化"><a class="header-anchor" href="#💾-分区和格式化">#</a> 💾 分区和格式化</h2><blockquote><ol><li>因本指南介绍使用的文件系统是 <code>Btrfs</code>，很多萌新可能有些不理解。这里有必要说明一下</li><li>若<strong>执意要用传统的 <code>ext4</code> 文件系统</strong>，本指南也给出了示例</li><li>对于全盘格式化后<strong>全新安装</strong>的（单 archlinux 系统）同学，这里也给出了需要做的额外步骤的说明</li><li>对于 <strong>Swap 分区还是 Swap File</strong> 的话题，也会在此讨论</li></ol></blockquote><h3 id="💾-关于-btrfs-文件系统"><a class="header-anchor" href="#💾-关于-btrfs-文件系统">#</a> 💾 关于 Btrfs 文件系统</h3><h4 id="了解-btrfs-文件系统"><a class="header-anchor" href="#了解-btrfs-文件系统">#</a> 了解 Btrfs 文件系统</h4><h4 id="为什么要用-btrfs-文件系统"><a class="header-anchor" href="#为什么要用-btrfs-文件系统">#</a> 为什么要用 Btrfs 文件系统</h4><h3 id="💾-传统-ext4-文件系统说明"><a class="header-anchor" href="#💾-传统-ext4-文件系统说明">#</a> 💾 传统 ext4 文件系统说明</h3><p>若使用传统的 <code>ext4</code> 文件系统，那么分区的建议为：</p><ol><li><p>若 archlinux 安装分区小于 <code>256GB</code>：</p><ul><li><code>/</code> 根目录：<code>全部空间</code>（用户主目录不单独分区）</li><li><code>/boot/efi</code> EFI 分区：<code>256MB</code></li><li>Swap 分区：<code>&gt;= 电脑实际运行内存的 60%</code></li></ul></li><li><p>若 archlinux 安装分区大于 <code>256GB</code>：</p><ul><li><code>/</code> 根目录：<code>128GB</code></li><li><code>/home</code> 用户主目录：<code>剩余的全部空间</code></li><li><code>/boot/efi</code> EFI 分区：<code>256MB</code></li><li>Swap 分区：<code>&gt;= 电脑实际运行内存的 60%</code></li></ul></li></ol>',9),d=(0,a.Uk)("分区同样使用 "),u=(0,a.Wm)("code",null,"cfdisk",-1),p=(0,a.Uk)(" 工具，具体操作类似上一节 "),b=(0,a.Uk)("7-1. 分区"),h=(0,a.Uk)(" 所述，这里不再赘述。"),k=(0,a.Wm)("ul",null,[(0,a.Wm)("li",null,[(0,a.Uk)("使用以下命令格式化 "),(0,a.Wm)("code",null,"ext4"),(0,a.Uk)(" 分区：")])],-1),W=(0,a.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,a.Wm)("pre",{class:"language-bash"},[(0,a.Wm)("code",null,"mkfs.ext4 /dev/sdax\n")]),(0,a.Wm)("div",{class:"line-numbers"},[(0,a.Wm)("span",{class:"line-number"},"1"),(0,a.Wm)("br")])],-1),f=(0,a.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,a.Wm)("pre",{class:"language-bash"},[(0,a.Wm)("code",null,"mkfs.ext4 /dev/nvmexn1pn\n")]),(0,a.Wm)("div",{class:"line-numbers"},[(0,a.Wm)("span",{class:"line-number"},"1"),(0,a.Wm)("br")])],-1),g=(0,a.Wm)("ul",null,[(0,a.Wm)("li",null,[(0,a.Uk)("使用以下命令挂载 "),(0,a.Wm)("code",null,"ext4"),(0,a.Uk)(" 分区：")])],-1),U=(0,a.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,a.Wm)("pre",{class:"language-bash"},[(0,a.Wm)("code",null,[(0,a.Wm)("span",{class:"token function"},"mount"),(0,a.Uk)(" /dev/sdxn /mnt\n"),(0,a.Wm)("span",{class:"token function"},"mkdir"),(0,a.Uk)(" /mnt/home "),(0,a.Wm)("span",{class:"token comment"},"# 若 /home 目录单独分区"),(0,a.Uk)("\n"),(0,a.Wm)("span",{class:"token function"},"mount"),(0,a.Uk)(" /dev/sdxn /mnt/home "),(0,a.Wm)("span",{class:"token comment"},"# 若 /home 目录单独分区"),(0,a.Uk)("\n"),(0,a.Wm)("span",{class:"token function"},"mkdir"),(0,a.Uk)(" -p /mnt/boot/efi\n"),(0,a.Wm)("span",{class:"token function"},"mount"),(0,a.Uk)(" /dev/sdxn /mnt/boot/efi\n")])]),(0,a.Wm)("div",{class:"line-numbers"},[(0,a.Wm)("span",{class:"line-number"},"1"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"2"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"3"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"4"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"5"),(0,a.Wm)("br")])],-1),v=(0,a.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,a.Wm)("pre",{class:"language-bash"},[(0,a.Wm)("code",null,[(0,a.Wm)("span",{class:"token function"},"mount"),(0,a.Uk)(" /dev/nvmexn1pn /mnt\n"),(0,a.Wm)("span",{class:"token function"},"mkdir"),(0,a.Uk)(" /mnt/home "),(0,a.Wm)("span",{class:"token comment"},"# 若 /home 目录单独分区"),(0,a.Uk)("\n"),(0,a.Wm)("span",{class:"token function"},"mount"),(0,a.Uk)(" /dev/nvmexn1pn /mnt/home "),(0,a.Wm)("span",{class:"token comment"},"# 若 /home 目录单独分区"),(0,a.Uk)("\n"),(0,a.Wm)("span",{class:"token function"},"mkdir"),(0,a.Uk)(" -p /mnt/boot/efi\n"),(0,a.Wm)("span",{class:"token function"},"mount"),(0,a.Uk)(" /dev/nvmexn1pn /mnt/boot/efi\n")])]),(0,a.Wm)("div",{class:"line-numbers"},[(0,a.Wm)("span",{class:"line-number"},"1"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"2"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"3"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"4"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"5"),(0,a.Wm)("br")])],-1),E=(0,a.Wm)("h3",{id:"🆕-全新安装"},[(0,a.Wm)("a",{class:"header-anchor",href:"#🆕-全新安装"},"#"),(0,a.Uk)(" 🆕 全新安装")],-1),w=(0,a.Uk)("若为全新安装（单 archlinux 系统），首先要对磁盘建立新的 GPT 分区表；同时，由于没有现存的 EFI 分区，所以我们还需要手动创建它（这一步在 "),_=(0,a.Uk)("7. 分区和格式化（使用 Btrfs 文件系统）"),B=(0,a.Uk)(" 步骤之前）："),x=(0,a.uE)('<h4 id="_1-建立新的-gpt-分区表"><a class="header-anchor" href="#_1-建立新的-gpt-分区表">#</a> 1. 建立新的 GPT 分区表</h4><ol><li>同样的，先通过 <code>lsblk</code> 命令，区分要全新安装 archlinux 的磁盘（通过观察磁盘的大小等判断）：</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>lsblk <span class="token comment"># 显示当前分区情况</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="2"><li>通过以下命令将磁盘转换为 <code>gpt</code> 类型：</li></ol>',4),A=(0,a.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,a.Wm)("pre",{class:"language-bash"},[(0,a.Wm)("code",null,[(0,a.Wm)("span",{class:"token function"},"parted"),(0,a.Uk)(" /dev/sdx "),(0,a.Wm)("span",{class:"token comment"},"# 执行 parted，进行磁盘类型变更"),(0,a.Uk)("\n"),(0,a.Wm)("span",{class:"token punctuation"},"("),(0,a.Uk)("parted"),(0,a.Wm)("span",{class:"token punctuation"},")"),(0,a.Uk)("mktable "),(0,a.Wm)("span",{class:"token comment"},"# 输入 mktable"),(0,a.Uk)("\nNew disk label type? gpt "),(0,a.Wm)("span",{class:"token comment"},"# 输入 gpt，将磁盘类型转换为 GPT 类型。如磁盘有数据会警告，输入 yes 即可"),(0,a.Uk)("\nquit "),(0,a.Wm)("span",{class:"token comment"},"# 退出 parted 命令行交互"),(0,a.Uk)("\n")])]),(0,a.Wm)("div",{class:"line-numbers"},[(0,a.Wm)("span",{class:"line-number"},"1"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"2"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"3"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"4"),(0,a.Wm)("br")])],-1),S=(0,a.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,a.Wm)("pre",{class:"language-bash"},[(0,a.Wm)("code",null,[(0,a.Wm)("span",{class:"token function"},"parted"),(0,a.Uk)(" /dev/nvmexn1 "),(0,a.Wm)("span",{class:"token comment"},"# 执行 parted，进行磁盘类型变更"),(0,a.Uk)("\n"),(0,a.Wm)("span",{class:"token punctuation"},"("),(0,a.Uk)("parted"),(0,a.Wm)("span",{class:"token punctuation"},")"),(0,a.Uk)("mktable "),(0,a.Wm)("span",{class:"token comment"},"# 输入 mktable"),(0,a.Uk)("\nNew disk label type? gpt "),(0,a.Wm)("span",{class:"token comment"},"# 输入 gpt，将磁盘类型转换为 GPT 类型。如磁盘有数据会警告，输入 yes 即可"),(0,a.Uk)("\nquit "),(0,a.Wm)("span",{class:"token comment"},"# 退出 parted 命令行交互"),(0,a.Uk)("\n")])]),(0,a.Wm)("div",{class:"line-numbers"},[(0,a.Wm)("span",{class:"line-number"},"1"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"2"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"3"),(0,a.Wm)("br"),(0,a.Wm)("span",{class:"line-number"},"4"),(0,a.Wm)("br")])],-1),F=(0,a.Wm)("div",{class:"custom-container danger"},[(0,a.Wm)("p",{class:"custom-container-title"},"☢️ 警告"),(0,a.Wm)("p",null,"重建分区表会使磁盘所有数据丢失，请事先确认。")],-1),C=(0,a.Wm)("h4",{id:"_2-建立-efi-分区"},[(0,a.Wm)("a",{class:"header-anchor",href:"#_2-建立-efi-分区"},"#"),(0,a.Uk)(" 2. 建立 EFI 分区")],-1),G=(0,a.Uk)("进入 "),I=(0,a.Wm)("code",null,"cfdisk",-1),T=(0,a.Uk)(" 分区工具之后，类似上一节步骤 "),q=(0,a.Uk)("7-1. 分区"),M=(0,a.Uk)(" 的分区说明，建立 EFI 分区："),N=(0,a.uE)("<li><p>选中 <code>Free space</code> &gt; 再选中操作 <code>[New]</code> &gt; 然后按下回车 <code>Enter</code> 以新建 <code>EFI</code> 分区</p></li><li><p>输入 <code>分区大小</code>（建议 &gt;= <code>256MB</code>、&lt;= <code>1024MB</code>；推荐 <code>512MB</code>）&gt; 然后按下回车 <code>Enter</code></p></li><li><p>选中操作 <code>[Type]</code> &gt; 然后按下回车 <code>Enter</code> &gt; 通过方向键 <code>↑</code> 和 <code>↓</code> 选中 <code>EFI System</code> &gt; 最后按下回车 <code>Enter</code></p></li>",3),L=(0,a.Uk)("接下来可以按照上一节 "),R=(0,a.Uk)("7-1. 分区"),D=(0,a.Uk)(" 的步骤创建其它分区"),y=(0,a.Wm)("h4",{id:"_3-格式化-efi-分区"},[(0,a.Wm)("a",{class:"header-anchor",href:"#_3-格式化-efi-分区"},"#"),(0,a.Uk)(" 3. 格式化 EFI 分区")],-1),P=(0,a.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,a.Wm)("pre",{class:"language-bash"},[(0,a.Wm)("code",null,"mkfs.vfat /dev/sdxn\n")]),(0,a.Wm)("div",{class:"line-numbers"},[(0,a.Wm)("span",{class:"line-number"},"1"),(0,a.Wm)("br")])],-1),V=(0,a.Wm)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,a.Wm)("pre",{class:"language-bash"},[(0,a.Wm)("code",null,"mkfs.vfat /dev/nvmexn1pn\n")]),(0,a.Wm)("div",{class:"line-numbers"},[(0,a.Wm)("span",{class:"line-number"},"1"),(0,a.Wm)("br")])],-1),O=(0,a.Wm)("h3",{id:"💾-swap-分区和-swap-文件"},[(0,a.Wm)("a",{class:"header-anchor",href:"#💾-swap-分区和-swap-文件"},"#"),(0,a.Uk)(" 💾 Swap 分区和 Swap 文件")],-1),X=(0,a.Wm)("p",null,"如果希望使用 Swap 文件替换 Swap 分区，那么在分区和挂载中不必创建和开启 Swap 分区。",-1),z=(0,a.Wm)("div",{class:"custom-container tip"},[(0,a.Wm)("p",{class:"custom-container-title"},"ℹ️ 提示"),(0,a.Wm)("p",null,[(0,a.Uk)("但是，使用 Swap 文件会更加复杂。因为若使用 Swap 文件在 "),(0,a.Wm)("code",null,"Btrfs"),(0,a.Uk)(" 文件系统中设置休眠（hibernate）的时候需要额外的步骤，而且可能有兼容性问题。若没有动态改变 Swap 大小的需求，建议使用 Swap 分区。")])],-1),Y=(0,a.Uk)("通过以下步骤创建和挂载 Swap 文件（这一步在 "),j=(0,a.Uk)("18. 完成安装"),H=(0,a.Uk)(" 步骤之后）："),J=(0,a.uE)('<ol><li>通过以下命令创建 Swap File：</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">dd</span> <span class="token assign-left variable">if</span><span class="token operator">=</span>/dev/zero <span class="token assign-left variable">of</span><span class="token operator">=</span>/swapfile <span class="token assign-left variable">bs</span><span class="token operator">=</span>1M <span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token number">16384</span> <span class="token assign-left variable">status</span><span class="token operator">=</span>progress <span class="token comment"># 创建 16G 的交换空间（大小 &gt;= 电脑实际运行内存的 60%）</span>\n<span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token number">600</span> /swapfile <span class="token comment"># 设置正确的权限</span>\n<span class="token function">sudo</span> <span class="token function">mkswap</span> /swapfile <span class="token comment"># 格式化 Swap 文件</span>\n<span class="token function">sudo</span> <span class="token function">swapon</span> /swapfile <span class="token comment"># 挂载 Swap 文件</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="2"><li>通过以下命令开启 Swap 文件：</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">swapon</span> /swapfile\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="3"><li>使用 <code>free</code> 命令复查 Swap 文件挂载情况：</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">free</span> -h <span class="token comment"># -h 选项会使输出以人类可读的单位显示</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="4"><li>最后，向 <code>/etc/fstab</code> 中追加如下内容：</li></ol><div class="language-fstab ext-fstab line-numbers-mode"><pre class="language-fstab"><code>/swapfile  none  swap  defaults  0 0\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="💽-安装环境和新系统的关系"><a class="header-anchor" href="#💽-安装环境和新系统的关系">#</a> 💽 安装环境和新系统的关系</h2><blockquote><p>理解安装环境和新系统的关系，对于理解 archlinux 安装时所做的步骤具有重大意义。可以说，理解了它们的关系基本上就理解了 archlinux 的安装</p></blockquote><p>为了生动形象的理解安装环境和新系统的关系，我们可以将安装系统的过程想象成搬家 🏠。</p><h3 id="_1-🏠-建房子"><a class="header-anchor" href="#_1-🏠-建房子">#</a> 1. 🏠 建房子</h3>',12),K=(0,a.Uk)("我们可以将安装环境比喻成一个临时的家。为了住进新家，我们需要先把新家的房子建起来。这个过程就是 "),Q=(0,a.Uk)("7. 分区和格式化"),Z=(0,a.Uk)("。在磁盘上建立新的分区并格式化，就好比在空余的土地上建立起新的房子。"),$=(0,a.Wm)("h3",{id:"_2-🛣️-建立通道"},[(0,a.Wm)("a",{class:"header-anchor",href:"#_2-🛣️-建立通道"},"#"),(0,a.Uk)(" 2. 🛣️ 建立通道")],-1),ee=(0,a.Uk)("新房建好了，我们首先还要建立一条联通旧家和新家之间的通道 —— 不然我们怎么走到新家去呢！更不要提将家具什么的安置到新家去了。这个步骤就是 "),ne=(0,a.Uk)("8. 挂载"),se=(0,a.Uk)("。通过将新的分区挂载到 "),ae=(0,a.Wm)("code",null,"/mnt",-1),le=(0,a.Uk)(" 下，我们才能对新的分区进行操作。"),oe=(0,a.Wm)("h3",{id:"_3-🛋️-添置家具"},[(0,a.Wm)("a",{class:"header-anchor",href:"#_3-🛋️-添置家具"},"#"),(0,a.Uk)(" 3. 🛋️ 添置家具")],-1),ce=(0,a.Uk)("光有一个空荡荡的房子是没有用的。为了变成一个能够生活的温馨小窝，我们还需要添置家具。这个步骤就是 "),te=(0,a.Uk)("9. 安装系统"),me=(0,a.Uk)("。在执行 "),ie=(0,a.Wm)("code",null,"pacstrap",-1),re=(0,a.Uk)(" 脚本的过程中，其实就是将系统运行需要的一些基础的东西安装到新的系统中 —— 类似把家具放到新的家里。"),de=(0,a.Wm)("h3",{id:"_4-🚚-搬进新家"},[(0,a.Wm)("a",{class:"header-anchor",href:"#_4-🚚-搬进新家"},"#"),(0,a.Uk)(" 4. 🚚 搬进新家")],-1),ue=(0,a.Uk)("最后，新家建好了，装修啊、家具啊也弄好了，我们可以搬进新家了！这一步骤就是 "),pe=(0,a.Uk)("11. change root"),be=(0,a.Uk)("。"),he=(0,a.Wm)("code",null,"arch-chroot",-1),ke=(0,a.Uk)(" 脚本是软件包 "),We={href:"https://archlinux.org/packages/?name=arch-install-scripts",target:"_blank",rel:"noopener noreferrer"},fe=(0,a.Wm)("code",null,"arch-install-scripts",-1),ge=(0,a.Uk)(" 的一部分，但本质上只是在 "),Ue=(0,a.Wm)("code",null,"chroot",-1),ve=(0,a.Uk)(" 命令的基础上添加了一些功能，简化了“搬家”的流程。其类似（注意，只是类似，"),Ee=(0,a.Wm)("code",null,"arch-chroot",-1),we=(0,a.Uk)(" 还会做一些其它的工作，安装时请使用 "),_e=(0,a.Wm)("code",null,"arch-chroot",-1),Be=(0,a.Uk)("）以下命令："),xe=(0,a.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mount</span> -t proc none /mnt/proc\n<span class="token function">mount</span> -t sysfs none /mnt/sys\n<span class="token function">mount</span> -o <span class="token builtin class-name">bind</span> /dev /mnt/dev\n<span class="token function">chroot</span> /mnt <span class="token function">bash</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><code>chroot</code> 顾名思义，就是 <strong>ch</strong>ange <strong>root</strong> 的意思。<code>chroot</code> 命令把根目录换成指定的目录。通常，切换根目录一般的目的是为了系统维护，例如重装引导程序或者重置遗忘的密码；而在安装时则是为了安装（大雾 🌫️。在安装过程中，新的根目录就是 <code>/mnt</code>。这个过程就好比从原来的家搬到了新的家一样，是不是这样理解起来就简单一点了呢？</p><h2 id="🥙-杂七杂八"><a class="header-anchor" href="#🥙-杂七杂八">#</a> 🥙 杂七杂八</h2><p>其它琐碎的问题不在一一展开叙述，这里通过列表统一说明：</p>',4),Ae=(0,a.Wm)("li",null,[(0,a.Uk)("EFI 分区（又称 esp 分区）不一定要在 "),(0,a.Wm)("code",null,"/boot/efi"),(0,a.Uk)(" 目录下；也可以是 "),(0,a.Wm)("code",null,"/boot"),(0,a.Uk)(" 或者 "),(0,a.Wm)("code",null,"/efi"),(0,a.Uk)(" 等等（若为 "),(0,a.Wm)("code",null,"/boot"),(0,a.Uk)(" 则 "),(0,a.Wm)("code",null,"/boot"),(0,a.Uk)(" 目录中的文件会和 EFI 分区的文件混杂在一起）")],-1),Se=(0,a.Uk)("若为"),Fe=(0,a.Wm)("strong",null,"联想小新 Pro14 / YOGA 14s 2021",-1),Ce=(0,a.Uk)(" 机型，发现安装前后键盘都无法正常工作。此时安装时请使用外接键盘。为了解决该问题，在 "),Ge=(0,a.Uk)("17. 安装引导程序"),Ie=(0,a.Uk)(" 步骤中编辑 "),Te=(0,a.Wm)("code",null,"/etc/default/grub",-1),qe=(0,a.Uk)(" 文件时添加额外的 GRUB 参数 —— 在 "),Me=(0,a.Wm)("code",null,"GRUB_CMDLINE_LINUX_DEFAULT",-1),Ne=(0,a.Uk)(" 这一行中添加参数 "),Le=(0,a.Wm)("code",null,"i8042.dumbkbd",-1),Re=(0,a.uE)('<p>修改后复查：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">head</span> /etc/default/grub\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>输出如下：</p><div class="language-grub ext-grub line-numbers-mode"><pre class="language-grub"><code># GRUB boot loader configuration\n\nGRUB_DEFAULT_SUBMENU=y\nGRUB_DEFAULT=saved\nGRUB_SAVEDEFAULT=true\nGRUB_TIMEOUT=2\nGRUB_DISTRIBUTOR=&quot;Arch&quot;\nGRUB_CMDLINE_LINUX_DEFAULT=&quot;loglevel=5 nowatchdog i8042.dumbkbd&quot;\nGRUB_CMDLINE_LINUX=&quot;&quot;\n</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><div class="highlight-line"> </div><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div>',4),De={render:function(e,n){const s=(0,a.up)("RouterLink"),De=(0,a.up)("CodeGroupItem"),ye=(0,a.up)("CodeGroup"),Pe=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.j4)(a.HY,null,[l,(0,a.Wm)("blockquote",null,[o,(0,a.Wm)("p",null,[c,(0,a.Wm)(s,{to:"/rookie/basic-install.html"},{default:(0,a.w5)((()=>[t])),_:1}),m]),i]),r,(0,a.Wm)("p",null,[d,u,p,(0,a.Wm)(s,{to:"/rookie/basic-install.html#_7-1-%E5%88%86%E5%8C%BA"},{default:(0,a.w5)((()=>[b])),_:1}),h]),k,(0,a.Wm)(ye,null,{default:(0,a.w5)((()=>[(0,a.Wm)(De,{title:"SATA"},{default:(0,a.w5)((()=>[W])),_:1}),(0,a.Wm)(De,{title:"NVME"},{default:(0,a.w5)((()=>[f])),_:1})])),_:1}),g,(0,a.Wm)(ye,null,{default:(0,a.w5)((()=>[(0,a.Wm)(De,{title:"SATA"},{default:(0,a.w5)((()=>[U])),_:1}),(0,a.Wm)(De,{title:"NVME"},{default:(0,a.w5)((()=>[v])),_:1})])),_:1}),E,(0,a.Wm)("p",null,[w,(0,a.Wm)(s,{to:"/rookie/basic-install.html#_7-%E5%88%86%E5%8C%BA%E5%92%8C%E6%A0%BC%E5%BC%8F%E5%8C%96-%E4%BD%BF%E7%94%A8-btrfs-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F"},{default:(0,a.w5)((()=>[_])),_:1}),B]),x,(0,a.Wm)(ye,null,{default:(0,a.w5)((()=>[(0,a.Wm)(De,{title:"SATA"},{default:(0,a.w5)((()=>[A])),_:1}),(0,a.Wm)(De,{title:"NVME"},{default:(0,a.w5)((()=>[S])),_:1})])),_:1}),F,C,(0,a.Wm)("p",null,[G,I,T,(0,a.Wm)(s,{to:"/rookie/basic-install.html#_7-1-%E5%88%86%E5%8C%BA"},{default:(0,a.w5)((()=>[q])),_:1}),M]),(0,a.Wm)("ol",null,[N,(0,a.Wm)("li",null,[(0,a.Wm)("p",null,[L,(0,a.Wm)(s,{to:"/rookie/basic-install.html#_7-1-%E5%88%86%E5%8C%BA"},{default:(0,a.w5)((()=>[R])),_:1}),D])])]),y,(0,a.Wm)(ye,null,{default:(0,a.w5)((()=>[(0,a.Wm)(De,{title:"SATA"},{default:(0,a.w5)((()=>[P])),_:1}),(0,a.Wm)(De,{title:"NVME"},{default:(0,a.w5)((()=>[V])),_:1})])),_:1}),O,X,z,(0,a.Wm)("p",null,[Y,(0,a.Wm)(s,{to:"/rookie/basic-install.html#_18-%E5%AE%8C%E6%88%90%E5%AE%89%E8%A3%85"},{default:(0,a.w5)((()=>[j])),_:1}),H]),J,(0,a.Wm)("p",null,[K,(0,a.Wm)(s,{to:"/rookie/basic-install.html#_7-%E5%88%86%E5%8C%BA%E5%92%8C%E6%A0%BC%E5%BC%8F%E5%8C%96-%E4%BD%BF%E7%94%A8-btrfs-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F"},{default:(0,a.w5)((()=>[Q])),_:1}),Z]),$,(0,a.Wm)("p",null,[ee,(0,a.Wm)(s,{to:"/rookie/basic-install.html#_8-%E6%8C%82%E8%BD%BD"},{default:(0,a.w5)((()=>[ne])),_:1}),se,ae,le]),oe,(0,a.Wm)("p",null,[ce,(0,a.Wm)(s,{to:"/rookie/basic-install.html#_9-%E5%AE%89%E8%A3%85%E7%B3%BB%E7%BB%9F"},{default:(0,a.w5)((()=>[te])),_:1}),me,ie,re]),de,(0,a.Wm)("p",null,[ue,(0,a.Wm)(s,{to:"/rookie/basic-install.html#_11-change-root"},{default:(0,a.w5)((()=>[pe])),_:1}),be,he,ke,(0,a.Wm)("a",We,[fe,(0,a.Wm)(Pe)]),ge,Ue,ve,Ee,we,_e,Be]),xe,(0,a.Wm)("ol",null,[Ae,(0,a.Wm)("li",null,[Se,Fe,Ce,(0,a.Wm)(s,{to:"/basic-install.html#_17-%E5%AE%89%E8%A3%85%E5%BC%95%E5%AF%BC%E7%A8%8B%E5%BA%8F"},{default:(0,a.w5)((()=>[Ge])),_:1}),Ie,Te,qe,Me,Ne,Le])]),Re],64)}}}}]);