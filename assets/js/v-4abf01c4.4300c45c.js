(self.webpackChunkarch_guide=self.webpackChunkarch_guide||[]).push([[584],{7866:(s,e,n)=>{"use strict";n.r(e),n.d(e,{data:()=>a});const a={key:"v-4abf01c4",path:"/rookie/basic-install.html",title:"archlinux 基础安装",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:3,title:"⛵ 万事俱备，只欠东风",slug:"⛵-万事俱备-只欠东风",children:[]},{level:3,title:"🔖 这一节将会讨论：",slug:"🔖-这一节将会讨论",children:[]},{level:2,title:"1. 禁用 reflector 服务",slug:"_1-禁用-reflector-服务",children:[]},{level:2,title:"2. 再次确认是否为 UEFI 模式",slug:"_2-再次确认是否为-uefi-模式",children:[]},{level:2,title:"3. 连接网络",slug:"_3-连接网络",children:[{level:3,title:"若使用无线连接：",slug:"若使用无线连接",children:[]},{level:3,title:"若使用有线连接：",slug:"若使用有线连接",children:[]}]},{level:2,title:"4. 测试网络连通性",slug:"_4-测试网络连通性",children:[]},{level:2,title:"5. 更新系统时钟",slug:"_5-更新系统时钟",children:[]},{level:2,title:"6. 更换国内软件仓库镜像源加快下载速度",slug:"_6-更换国内软件仓库镜像源加快下载速度",children:[]},{level:2,title:"7. 分区和格式化（使用 Btrfs 文件系统）",slug:"_7-分区和格式化-使用-btrfs-文件系统",children:[]},{level:2,title:"9. 挂载",slug:"_9-挂载",children:[]},{level:2,title:"10. 安装系统",slug:"_10-安装系统",children:[]},{level:2,title:"11. 生成 fstab 文件",slug:"_11-生成-fstab-文件",children:[]},{level:2,title:"12. change root",slug:"_12-change-root",children:[]},{level:2,title:"13. 设置主机名与时区",slug:"_13-设置主机名与时区",children:[]},{level:2,title:"14. 硬件时间设置",slug:"_14-硬件时间设置",children:[]},{level:2,title:"15. 设置 Locale",slug:"_15-设置-locale",children:[]},{level:2,title:"16. 为 root 用户设置密码",slug:"_16-为-root-用户设置密码",children:[]},{level:2,title:"17. 安装微码",slug:"_17-安装微码",children:[]},{level:2,title:"18. 安装引导程序",slug:"_18-安装引导程序",children:[]},{level:2,title:"19. 完成安装",slug:"_19-完成安装",children:[]}],filePathRelative:"rookie/basic-install.md",git:{updatedTime:1622481265e3,contributors:[{name:"icekylin",email:"wminid@yeah.net",commits:3}]}}},7998:(s,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>X});var a=n(6252);const l=(0,a.Wm)("h1",{id:"archlinux-基础安装"},[(0,a.Wm)("a",{class:"header-anchor",href:"#archlinux-基础安装"},"#"),(0,a.Uk)(" archlinux 基础安装")],-1),c=(0,a.Wm)("h3",{id:"⛵-万事俱备-只欠东风"},[(0,a.Wm)("a",{class:"header-anchor",href:"#⛵-万事俱备-只欠东风"},"#"),(0,a.Uk)(" ⛵ 万事俱备，只欠东风")],-1),i=(0,a.Uk)("经过了上一节的准备工作，我们可以开始正式安装 archlinux 了。如果你还没有完成前面的阅读，请先仔细阅读上一节 "),r=(0,a.Uk)("安装前的准备"),o=(0,a.Uk)("。如果对本节的步骤不理解或者有疑问，请阅读下一节"),t=(0,a.Wm)("blockquote",null,[(0,a.Wm)("h3",{id:"🔖-这一节将会讨论"},[(0,a.Wm)("a",{class:"header-anchor",href:"#🔖-这一节将会讨论"},"#"),(0,a.Uk)(" 🔖 这一节将会讨论：")]),(0,a.Wm)("ol",null,[(0,a.Wm)("li",null,"安装基础的 archlinux 系统")])],-1),p=(0,a.Uk)("本节从安装最基础的、无图形化界面的 archlinux 系统开始。如有需要也可以同时参阅 "),d={href:"https://wiki.archlinux.org/title/Installation_guide_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)",target:"_blank",rel:"noopener noreferrer"},u=(0,a.Uk)("archWiki 官方安装指南"),m=(0,a.Uk)("。"),b=(0,a.Wm)("div",{class:"custom-container tip"},[(0,a.Wm)("p",{class:"custom-container-title"},"ℹ️ 提示"),(0,a.Wm)("p",null,"本节中的截图来自虚拟机和已经安装好的 archlinux。不用担心！和你在实体机看到的是一样的。")],-1),h={class:"custom-container tip"},g=(0,a.Wm)("p",{class:"custom-container-title"},"ℹ️ 提示",-1),v=(0,a.Uk)("archlinux 在 2021 年 4 月在安装镜像中内置了一个 "),f={href:"https://archlinux.org/packages/extra/any/archinstall/",target:"_blank",rel:"noopener noreferrer"},k=(0,a.Uk)("安装脚本"),_=(0,a.Uk)("，类似一个一键安装脚本，提供一些选项，即可快速安装（填问卷安系统）。和所有一键安装脚本类似，提供自动化，但不灵活的安装过程。缺陷包括但不限于："),x=(0,a.Wm)("ol",null,[(0,a.Wm)("li",null,"只提供有限的文件系统格式"),(0,a.Wm)("li",null,"只可限定在一个磁盘"),(0,a.Wm)("li",null,"不能指定软件仓库镜像源"),(0,a.Wm)("li",null,"只提供有限的桌面选择"),(0,a.Wm)("li",null,"自动分区不可手动干预"),(0,a.Wm)("li",null,"输入错误直接崩溃退出"),(0,a.Wm)("li",null,"仅支持 UEFI 等")],-1),U=(0,a.Wm)("p",null,"不建议使用这个安装脚本，除了以上各种原因，初学者也无法在这种安装过程中学到任何东西。如果你因为某些原因需要快速启动一个基础的 archlinux 环境，那么可以尝试此脚本。",-1),w=(0,a.uE)('<div class="custom-container warning"><p class="custom-container-title">⚠️ 注意</p><p>请按照指南的步骤一步一步进行！不要跳步、也不要在步骤中添加多余的动作！</p><p>另外，如果安装中有报错，请弄清楚报错的原因（这要求你起码能看懂有报错）！常见的原因包括但不限于输错了命令、添加了多余的步骤等。在解决了问题之后再进行下一步！</p></div><h2 id="_1-禁用-reflector-服务"><a class="header-anchor" href="#_1-禁用-reflector-服务">#</a> 1. 禁用 reflector 服务</h2><p>2020 年，archlinux 安装镜像中加入了 <code>reflector</code> 服务，它会自己更新 <code>mirrorlist</code>（软件包管理器 <code>pacman</code> 的软件源）。在特定情况下，它会误删某些有用的源信息。这里联网后的第一件事就是将其禁用。也许它是一个好用的工具，但是很明显，因为地理上造成的特殊网络环境，这项服务并不适合启用。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>systemctl stop reflector.service\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol><li>通过如上命令将该服务禁用</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>systemctl status reflector.service\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ol start="2"><li>通过如上命令查看该服务是否被禁用</li></ol><h2 id="_2-再次确认是否为-uefi-模式"><a class="header-anchor" href="#_2-再次确认是否为-uefi-模式">#</a> 2. 再次确认是否为 UEFI 模式</h2><p>禁用 <code>reflector</code> 服务后，我们再来确认一下是否为 <code>UEFI</code> 模式。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ls</span> /sys/firmware/efi/efivars\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>若输出了一堆东西（<code>efi</code> 变量），则说明已在 <code>UEFI</code> 模式。否则请确认你的启动方式是否为 <code>UEFI</code>。</p><h2 id="_3-连接网络"><a class="header-anchor" href="#_3-连接网络">#</a> 3. 连接网络</h2><h3 id="若使用无线连接"><a class="header-anchor" href="#若使用无线连接">#</a> 若使用<strong>无线连接</strong>：</h3><p>无线连接使用 <code>iwctl</code> 进行连接：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>iwctl <span class="token comment"># 进入交互式命令行</span>\ndevice list <span class="token comment"># 列出无线网卡设备名，比如无线网卡看到叫 wlan0</span>\nstation wlan0 scan <span class="token comment"># 扫描网络</span>\nstation wlan0 get-networks <span class="token comment"># 列出所有 wifi 网络</span>\nstation wlan0 connect wifi-name <span class="token comment"># 进行连接，注意这里无法输入中文。回车后输入密码即可</span>\n<span class="token builtin class-name">exit</span> <span class="token comment">#成功后退出</span>\n</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><div class="highlight-line"> </div><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>',15),W={class:"custom-container tip"},E=(0,a.Wm)("p",{class:"custom-container-title"},"ℹ️ 提示",-1),B=(0,a.Uk)("若无线网卡无法显示，请按照上一节 "),I=(0,a.Uk)("确保网络环境"),A=(0,a.Uk)(" 的说明"),F=(0,a.Wm)("strong",null,"确保你的无线网卡硬件开关处于打开状态",-1),D=(0,a.Uk)("。"),y=(0,a.uE)('<p>你可以使用如下命令查看内核是否加载了你的无线网卡驱动。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>lspci -k <span class="token operator">|</span> <span class="token function">grep</span> Network\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>以我的硬件为例，输出如下：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>00:14.3 Network controller: Intel Corporation Wi-Fi <span class="token number">6</span> AX201 <span class="token punctuation">(</span>rev <span class="token number">20</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>部分无线网卡不兼容，请考虑使用有线连接安装 archlinux。</p>',5),G=(0,a.uE)('<h3 id="若使用有线连接"><a class="header-anchor" href="#若使用有线连接">#</a> 若使用<strong>有线连接</strong>：</h3><p>正常来说，只要插上一个已经联网的路由器分出的网线（DHCP），直接就能联网。</p><p>可以等待几秒等网络建立连接后再进行下一步测试网络的操作。</p><p>若笔记本没有网线接口请使用带网线接口的扩展坞。</p><h2 id="_4-测试网络连通性"><a class="header-anchor" href="#_4-测试网络连通性">#</a> 4. 测试网络连通性</h2><p>通过 <code>ping</code> 命令测试网络连通性。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ping</span> www.bilibili.com\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>稍等片刻，若能看到数据返回，即说明已经联网。与 windows 不同的是，需要按下 <code>Ctrl</code> + <code>C</code> 手动退出 <code>ping</code> 命令。</p>',8),R={class:"custom-container tip"},C=(0,a.Wm)("p",{class:"custom-container-title"},"ℹ️ 提示",-1),L=(0,a.Wm)("p",null,[(0,a.Uk)("如果无线网络还是无法连接，请使用 "),(0,a.Wm)("code",null,"ip link"),(0,a.Uk)(" 命令查看无线网卡设备，使用 "),(0,a.Wm)("code",null,"ip link set <设备名> up"),(0,a.Uk)(" 命令激活对应的无线网卡。若看到类似 "),(0,a.Wm)("code",null,"Operation not possible due to RF-kill"),(0,a.Uk)(" 的报错，继续尝试 "),(0,a.Wm)("code",null,"rfkill unblock wifi"),(0,a.Uk)(" 来解锁无线网卡。")],-1),N=(0,a.Uk)("如有需要，可以参考 "),S={href:"https://wiki.archlinux.org/title/Network_configuration_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)/Wireless_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E6%A3%80%E6%9F%A5%E8%AE%BE%E5%A4%87%E7%8A%B6%E6%80%81",target:"_blank",rel:"noopener noreferrer"},O=(0,a.Uk)("archWiki"),q=(0,a.Uk)(" 对应内容。"),z=(0,a.uE)('<h2 id="_5-更新系统时钟"><a class="header-anchor" href="#_5-更新系统时钟">#</a> 5. 更新系统时钟</h2><p>使用 <code>timedatectl</code> 确保系统时间是准确的。这一步<strong>不是</strong>可选的，正确的系统时间对于部分程序来说非常重要。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>timedatectl set-ntp <span class="token boolean">true</span> <span class="token comment"># 将系统时间与网络时间进行同步</span>\ntimedatectl status <span class="token comment"># 检查服务状态</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_6-更换国内软件仓库镜像源加快下载速度"><a class="header-anchor" href="#_6-更换国内软件仓库镜像源加快下载速度">#</a> 6. 更换国内软件仓库镜像源加快下载速度</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">vim</span> /etc/pacman.d/mirrorlist <span class="token comment"># 使用 vim 编辑镜像源文件</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>放在最上面的是会使用的软件仓库镜像源，推荐的的镜像源如下：</p><div class="language-mirrorlist ext-mirrorlist line-numbers-mode"><pre class="language-mirrorlist"><code>Server = https://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch # 中国科学技术大学开源镜像站\nServer = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch # 清华大学开源软件镜像站\nServer = https://repo.huaweicloud.com/archlinux/$repo/os/$arch # 华为开源镜像站\nServer = http://mirror.lzu.edu.cn/archlinux/$repo/os/$arch # 兰州大学开源镜像站\n</code></pre><div class="highlight-lines"><div class="highlight-line"> </div><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">⚠️ 注意</p><p>前车之鉴 —— 请不在这一步中添加 archlinuxcn 源！如果你在 <code>/etc/pacman.conf</code> 中添加了内容，请将它们删掉。</p></div><h2 id="_7-分区和格式化-使用-btrfs-文件系统"><a class="header-anchor" href="#_7-分区和格式化-使用-btrfs-文件系统">#</a> 7. 分区和格式化（使用 Btrfs 文件系统）</h2><div class="custom-container tip"><p class="custom-container-title">ℹ️ 提示</p><p>分区步骤对于有些人来说是个难点，如果有不理解的地方请参考下一节。</p><p>同时，分区的设置和参考案例也会在下一节详细列出。</p></div><div class="custom-container danger"><p class="custom-container-title">☢️ 警告</p><p>分区操作的部分命令具有危险性！除非你知道每一个命令在干什么，否则请不要执行！</p><p>同时，请提前做好数据备份，防止数据丢失！</p></div><p>本指南考虑到多数情况，在这里首先介绍 win10 和 archlinux 在一个磁盘上双系统的分区配置。</p><ul><li>EFI 分区： <code>/boot/efi</code> 256MB（由电脑厂商或 windows 决定，无需再次创建）</li><li>根目录： <code>/</code> &gt;= 128GB（和用户主目录在一个 <code>Btrfs</code> 文件系统上）</li><li>用户主目录： <code>/home</code> &gt;= 128GB（和根目录在一个 <code>Btrfs</code> 文件系统上）</li></ul><blockquote><p>因为采用 <code>Btrfs</code> 文件系统这里根目录的大小仅为参考，一般来说日常使用的 linux 分配 128GB 已经够用了。根目录最小建议不小于 50G，根目录过小会造成无法更新系统软件包等问题。</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>lsblk -f <span class="token comment"># 显示分区情况</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>接下来使用 cfdisk 命令对磁盘分区</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">cfdisk</span> /dev/sdx <span class="token comment">#来执行分区操作,分配各个分区大小，类型</span>\n<span class="token function">fdisk</span> -l <span class="token comment">#复查磁盘情况</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>cfdisk 分区的详细操作见视频中的操作。一般建议将 EFI 分区设置为磁盘的第一个分区，据说有些主板如果不将 EFI 设置为第一个分区，可能有不兼容的问题。</p><h2 id="_9-挂载"><a class="header-anchor" href="#_9-挂载">#</a> 9. 挂载</h2><p>在挂载时，挂载是有顺序的，需要从根目录开始挂载<br> 这里的 sdax 只是例子，具体根据你的实际情况来，请注意视频中的操作。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mount</span> /dev/sdax  /mnt\n<span class="token function">mkdir</span> /mnt/home\n<span class="token function">mount</span> /dev/sdax /mnt/home\n<span class="token function">mkdir</span> /mnt/efi\n<span class="token function">mount</span> /dev/sdax /mnt/efi\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_10-安装系统"><a class="header-anchor" href="#_10-安装系统">#</a> 10. 安装系统</h2><p>使用如下命令使用 <code>pacstrap</code> 脚本安装基础包</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pacstrap /mnt base base-devel linux linux-firmware\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>使用如下命令使用 <code>pacstrap</code> 脚本安装其它必要功能性软件</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pacstrap /mnt dhcpcd iwd <span class="token function">vim</span> <span class="token function">sudo</span> bash-completion\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="_11-生成-fstab-文件"><a class="header-anchor" href="#_11-生成-fstab-文件">#</a> 11. 生成 fstab 文件</h2><p><code>fstab</code> 用来定义磁盘分区。它是 Linux 系统中重要的文件之一。使用 <code>genfstab</code> 自动根据当前挂载情况生成并写入 <code>fstab</code> 文件。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>genfstab -U /mnt <span class="token operator">&gt;</span> /mnt/etc/fstab\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>复查一下 /mnt/etc/fstab 确保没有错误：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">cat</span> /mnt/etc/fstab\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>输出结果应该与此类似：</p><div class="language-fstab ext-fstab line-numbers-mode"><pre class="language-fstab"><code># /dev/nvme0n1p6  /  btrfs  rw,relatime,compress=zstd:3,ssd,space_cache,subvolid=256,subvol=/@,subvol=@ 0 0\nUUID=d01a3ca5-0798-462e-9a30-97065e7e36e1 /  btrfs  rw,relatime,compress=zstd:3,ssd,space_cache,subvolid=256,subvol=/@,subvol=@  0 0\n\n# /dev/nvme0n1p1  /boot/efi vfat  rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,utf8,errors=remount-ro      0 2\nUUID=522C-80C6  /boot/efi vfat  rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,utf8,errors=remount-ro 0 2\n\n# /dev/nvme0n1p6  /home btrfs rw,relatime,compress=zstd:3,ssd,space_cache,subvolid=257,subvol=/@home,subvol=@home 0 0\nUUID=d01a3ca5-0798-462e-9a30-97065e7e36e1 /home btrfs rw,relatime,compress=zstd:3,ssd,space_cache,subvolid=257,subvol=/@home,subvol=@home 0 0\n\n# /dev/nvme0n1p5  none  swap  defaults  0 0\nUUID=8e40dbed-590f-4cb8-80de-5cef8343a9fc none  swap  defaults  0 0\n</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><br><div class="highlight-line"> </div><br><br><div class="highlight-line"> </div><br><br><div class="highlight-line"> </div></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="_12-change-root"><a class="header-anchor" href="#_12-change-root">#</a> 12. change root</h2><p>使用以下命令把系统环境切换到新系统下：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>arch-chroot /mnt\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>此时，原来安装盘下的 <code>/mnt</code> 目录就变成了新系统的 <code>/</code> 目录。同时，可以发现命令行的提示符颜色和样式也发生了改变。</p><h2 id="_13-设置主机名与时区"><a class="header-anchor" href="#_13-设置主机名与时区">#</a> 13. 设置主机名与时区</h2><p>首先在 <code>/etc/hostname</code> 设置主机名：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">vim</span> /etc/hostname\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>加入你想为主机取的主机名，这里比如叫 myarch。</p><p>接下来在 <code>/etc/hosts</code> 设置与其匹配的条目：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">vim</span> /etc/hosts\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>加入如下内容：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">127.0</span>.0.1   localhost\n::1         localhost\n<span class="token number">127.0</span>.1.1   myarch.localdomain\tmyarch\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">ℹ️ 提示</p><p>某些情况下如不设置主机名，在 KDE 下可能会存在网络情况变更时无法启动 GUI 应用的问题，在终端中出现形如 <code>No protocol specified qt.qpa.xcb: could not connect to display</code> 的错误。这种情况极为少见。</p><p>但不管如何，即使没有问题，我们都应该设置好主机名。</p></div><p>随后设置时区，在 <code>/etc/localtime</code> 下用 <code>/usr</code> 中合适的时区创建符号连接：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="_14-硬件时间设置"><a class="header-anchor" href="#_14-硬件时间设置">#</a> 14. 硬件时间设置</h2><p>使用如下命令将系统时间同步到硬件时间：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>hwclock --systohc\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="_15-设置-locale"><a class="header-anchor" href="#_15-设置-locale">#</a> 15. 设置 Locale</h2><p>Locale 决定了软件使用的语言、书写习惯和字符集。</p><p>编辑 /etc/locale.gen，去掉 en_US.UTF-8 行以及 zh_CN.UTF-8 的注释符号（#）。</p><p>然后使用如下命令生成 locale。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>locale-gen\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>向 /etc/locale.conf 输入内容</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&#39;LANG=en_US.UTF-8&#39;</span>  <span class="token operator">&gt;</span> /etc/locale.conf\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="_16-为-root-用户设置密码"><a class="header-anchor" href="#_16-为-root-用户设置密码">#</a> 16. 为 root 用户设置密码</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">passwd</span> root\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="_17-安装微码"><a class="header-anchor" href="#_17-安装微码">#</a> 17. 安装微码</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pacman -S intel-ucode   <span class="token comment">#Intel</span>\npacman -S amd-ucode     <span class="token comment">#AMD</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_18-安装引导程序"><a class="header-anchor" href="#_18-安装引导程序">#</a> 18. 安装引导程序</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>pacman -S grub efibootmgr   <span class="token comment">#grub是启动引导器，efibootmgr被 grub 脚本用来将启动项写入 NVRAM。</span>\ngrub-install --target<span class="token operator">=</span>x86_64-efi --efi-directory<span class="token operator">=</span>/efi --bootloader-id<span class="token operator">=</span>GRUB <span class="token comment">#取名为GRUB 并将grubx64.efi安装到之前的指定位置</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>接下来编辑/etc/default/grub 文件，去掉<code>GRUB_CMDLINE_LINUX_DEFAULT</code>一行中最后的 quiet 参数，同时把 log level 的数值从 3 改成 5。这样是为了后续如果出现系统错误，方便排错。同时加入 nowatchdog 参数，这可以显著提高开关机速度。不会 vim 的同学注意视频中的操作。</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">vim</span> /etc/default/grub\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>最后生成 GRUB 所需的配置文件</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">grub-mkconfig</span> -o /boot/grub/grub.cfg\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',68),T=(0,a.Uk)("在某些主板安装完成后，你会发现没有启动条目。这是因为某些主板的 UEFI 固件在显示 UEFI NVRAM 引导条目之前，需要在特定的位置存放可引导文件，不支持自定义存放 efi 文件(如微星 Z170-A Gaming PRO)。解决方案是在默认启动路径下安装 GRUB。重新插入安装优盘，挂载目录，chroot 到/mnt，然后你可以直接把已经生成好的 efi 文件移动到默认目录下，如下代码所示。只有安装完成后你的主板不出现启动条目才需要尝试如下命令，正常安装无需执行。"),$={href:"https://wiki.archlinux.org/index.php/GRUB#Default/fallback_boot_path",target:"_blank",rel:"noopener noreferrer"},M=(0,a.Uk)("官方参考文档"),P=(0,a.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mkdir</span> -p /efi/EFI/BOOT\n<span class="token function">mv</span> /efi/EFI/GRUB/grubx64.efi /efi/EFI/BOOT/BOOTX64.EFI\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="_19-完成安装"><a class="header-anchor" href="#_19-完成安装">#</a> 19. 完成安装</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">exit</span> <span class="token comment"># 退回安装环境</span>\n<span class="token function">umount</span> -R /mnt <span class="token comment"># 卸载新分区</span>\n<span class="token function">reboot</span> <span class="token comment"># 重启</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>注意，重启前要先拔掉优盘，否则你重启后还是进安装程序而不是安装好的系统。</p><p>重启后，开启 dhcp 服务，即可连接网络：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>systemctl start dhcpcd <span class="token comment"># 立即启动 dhcp 服务</span>\n<span class="token function">ping</span> www.bilibili.com <span class="token comment"># 测试网络连接</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>若为无线连接，则还需要启动 <code>iwd</code> 才可以使用 <code>iwctl</code> 连接网络：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>systemctl start iwd <span class="token comment">#立即启动iwd</span>\niwctl               <span class="token comment">#和之前的方式一样，连接无线网络</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>到此为止，一个基础的，无 UI 界面的 Arch Linux 已经安装完成了。紧接着下一节，我们来安装图形界面。</p>',9),X={render:function(s,e){const n=(0,a.up)("RouterLink"),X=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.j4)(a.HY,null,[l,(0,a.Wm)("blockquote",null,[c,(0,a.Wm)("p",null,[i,(0,a.Wm)(n,{to:"/rookie/pre-install.html"},{default:(0,a.w5)((()=>[r])),_:1}),o])]),t,(0,a.Wm)("p",null,[p,(0,a.Wm)("a",d,[u,(0,a.Wm)(X)]),m]),b,(0,a.Wm)("div",h,[g,(0,a.Wm)("p",null,[v,(0,a.Wm)("a",f,[k,(0,a.Wm)(X)]),_]),x,U]),w,(0,a.Wm)("div",W,[E,(0,a.Wm)("p",null,[B,(0,a.Wm)(n,{to:"/rookie/pre-install.html#_1-%E7%A1%AE%E4%BF%9D%E7%BD%91%E7%BB%9C%E7%8E%AF%E5%A2%83"},{default:(0,a.w5)((()=>[I])),_:1}),A,F,D]),y]),G,(0,a.Wm)("div",R,[C,L,(0,a.Wm)("p",null,[N,(0,a.Wm)("a",S,[O,(0,a.Wm)(X)]),q])]),z,(0,a.Wm)("blockquote",null,[(0,a.Wm)("p",null,[T,(0,a.Wm)("a",$,[M,(0,a.Wm)(X)])])]),P],64)}}}}]);